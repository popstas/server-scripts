#!/bin/bash
SCRIPT_HELP="site-rm /path/to/site/root
Или site-rm в папке сайта.

Надо подтверждать каждый шаг.

Удаляет:
- конфиги из sites-enabled
- базу данных (только для drupal сайтов)
- папку сайта
- если не осталось сайтов, предлагает удалить юзера, вместе с конфигом pool.d php-fpm

Не делает никаких бэкапов, осторожно!
"

. /usr/share/server-scripts/lib/init

set -eu

root_path="$1"
cd $root_path
root_path="$PWD"

user="$(get_pwd_user)"

nginx=$(grep -R "root $root_path;" /etc/nginx/sites-enabled | cut -d':' -f1 | head -n1)
apache=$(grep -R "DocumentRoot $root_path" /etc/apache2/sites-enabled | cut -d':' -f1 | head -n1)

# 1. Delete apache & nginx configs
echo ""
if [ -e "$nginx" ]; then
  read -p "Delete $nginx (y/n)? " -n 1 -r
  echo ""
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Aborting"
    exit 1
  fi
  rm -v "$nginx"
else
  echo "Site nginx was not enabled."
fi

echo ""
if [ -e "$apache" ]; then
  read -p "Delete $apache (y/n)? " -n 1 -r
  echo ""
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Aborting"
    exit 1
  fi
  rm -v "$apache"
else
  echo "Site apache was not enabled."
fi

# 2. Delete database
echo ""
database=""
if [ -e "sites/default/settings.php" ] && [ -n $(command -v drs) ]; then
	database="$(drs database-settings database)"
fi
if [ -n "$database" ]; then
  set +e
  exists=$(mysql -Brs --execute="SHOW DATABASES LIKE '$database'" | grep -cx "$database")
  set -e

  if [ "$exists" = 1 ]; then
    read -p "Delete database $database (y/n)? " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      echo "Aborting"
      exit 1
    fi
    mysql -e "DROP DATABASE $database;"
  else
    echo "Database $database not exists."
  fi
else
  echo "Database not detected."
fi

# 3. Delete site directory
echo ""
read -p "Delete directory $root_path (y/n)? " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  echo "Aborting"
  exit 1
fi
cd ..
rm -rf "$root_path"

# 4. Delete user if no more sites
if [ "$user" != "root" ] && [ "$(find /home/$user/www -mindepth 1 -type d | wc -l)" = 0 ]; then
  read -p "Directory /home/$user/www is empty. Delete user $user with /home/$user (y/n)?" -n 1 -r
  echo ""
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Aborting"
    exit 1
  fi

  # 5. Delete php-fpm configs
  if [ -d "/etc/php" ]; then
    php_fpm_configs="$(grep -Rx "user = $user" /etc/php | grep pool.d | grep user | cut -d':' -f1)"
    if [ -n "$php_fpm_configs" ]; then
      echo "User have php-fpm configs, you should delete it before user deletion:"
      echo "$php_fpm_configs"
      read -p "Delete php-fpm configs (y/n)?" -n 1 -r
      echo ""
      if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Aborting"
        exit 1
      fi

      echo "$php_fpm_configs" | xargs rm -v
      reload-web
    fi
  fi

  # 6. Delete crontab
  cron_file="/var/spool/cron/crontabs/$user"
  if [ -f "$cron_file" ]; then
    echo "$cron_file:"
    cat "$cron_file"
    read -p "Delete $cron_file (y/n)?" -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      echo "Aborting"
      exit 1
    fi
    rm "$cron_file"
  fi

  cd /
  echo "deluser $user --remove-home"
  deluser "$user" --remove-home

fi
